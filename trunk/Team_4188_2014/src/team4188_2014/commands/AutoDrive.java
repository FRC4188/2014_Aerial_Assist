// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.


package team4188_2014.commands;

import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.can.CANTimeoutException;
import edu.wpi.first.wpilibj.command.Command;
import team4188_2014.Robot;
import team4188_2014.RobotMap;

/**
 *
 */
public class  AutoDrive extends Command {
    private boolean doneYet = false;
    private Timer timer;
    private double TIME_FINAL = 1.5;

    public AutoDrive() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.drivetrain);
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
        timer = new Timer();
        timer.start();
//        Robot.drivetrain.resetEncoders();
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        if(timer.get() <= TIME_FINAL) Robot.drivetrain.driveAuto(0, -0.3, 0, 0);
        else {
            Robot.drivetrain.driveAuto(0, 0, 0, 0);
            timer.stop();
            doneYet = true;
        }
            
            
//            if(Robot.drivetrain.getEncoderDistance(RobotMap.drivetrainfrontLeftEncoder) < 181.2 || 
//                    Robot.drivetrain.getEncoderDistance(RobotMap.drivetrainfrontRightEncoder) < 181.2) Robot.drivetrain.driveAuto(0, 0.3, 0, 0);
//            if(Robot.drivetrain.getEncoderDistance(RobotMap.drivetrainfrontLeftEncoder) < 271.85 || 
//                    Robot.drivetrain.getEncoderDistance(RobotMap.drivetrainfrontRightEncoder) < 271.85) Robot.drivetrain.driveAuto(0, 0.2, 0, 0);
//            if(Robot.drivetrain.getEncoderDistance(RobotMap.drivetrainfrontLeftEncoder) < 362.5 || 
//                    Robot.drivetrain.getEncoderDistance(RobotMap.drivetrainfrontRightEncoder) < 362.5) Robot.drivetrain.driveAuto(0, 0.1, 0, 0);
//            if(Robot.drivetrain.getEncoderDistance(RobotMap.drivetrainfrontLeftEncoder) >= 362.5 || 
//                    Robot.drivetrain.getEncoderDistance(RobotMap.drivetrainfrontRightEncoder) >= 362.5){
//                      Robot.drivetrain.driveAuto(0, 0, 0, 0); 
//                      doneYet = true;
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return doneYet;
        
//        return true;
    }

    // Called once after isFinished returns true
    protected void end() {
        doneYet = false;
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
