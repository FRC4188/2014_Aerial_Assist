// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.


package team4188_2014.commands;

import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.can.CANTimeoutException;
import edu.wpi.first.wpilibj.command.Command;
import team4188_2014.Robot;
import team4188_2014.RobotMap;

/**
 *
 */
public class  AutoDriveBackwards extends Command {
    private boolean doneYet = false;
    private Timer timer;
    private double TIME_1 = 2;
    private double TIME_2 = 2.5;
    private double TIME_3 = 2.75;
    private double TIME_4 = 3.00;

    public AutoDriveBackwards() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
//        requires(Robot.drivetrain);
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
        timer = new Timer();
        timer.start();
//        Robot.drivetrain.resetEncoders();
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        if(timer.get() <= TIME_1) Robot.drivetrain.driveAuto(0, 0.5, 0, 0);
        else if (timer.get() > TIME_1 && timer.get() <= TIME_2) Robot.drivetrain.driveAuto(0, 0.3, 0, 0);
        else if (timer.get() > TIME_2 && timer.get() <= TIME_3) Robot.drivetrain.driveAuto(0, 0.15, 0, 0);
        else if (timer.get() > TIME_3 && timer.get() <= TIME_4) Robot.drivetrain.driveAuto(0, 0.05, 0, 0);
        else {
            Robot.drivetrain.driveAuto(0, 0.025, 0, 0);
            doneYet = true;
        }
            
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return doneYet;
        
//        return true;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
